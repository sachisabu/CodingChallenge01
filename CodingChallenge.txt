/*
* Author   : Sachin Sabu
* Purpose  : Coding Challenge
*        
* Revision Ref Number  Release No  Date            Modified By     Description
* -------- ----------  ----------  -----------     ------------    -----------

*/
public class CodingChallenge {
    public static list < list < integer >> listNodes = new list < list < integer >> ();
    public boolean connect(integer a, integer b) {
        boolean flagCheck = false;
        if (listNodes.size() > 0) {
            for (integer i = 0; i < listNodes.size(); i++) {
                list < integer > checkExistingNodes = listNodes[i];
                if (listNodes[i].contains(a)) {
                    checkExistingNodes.add(b);
                    flagCheck = true;
                } else if (listNodes[i].contains(b)) {
                    checkExistingNodes.add(a);
                    flagCheck = true;
                }
                listNodes[i] = checkExistingNodes;
            }
        }
        if (!flagCheck) {
            //system.debug('flagCheck false');
            list < integer > listNew = new list < integer > ();
            listNew.add(a);
            listNew.add(b);
            listNodes.add(listNew);
        }
        return null;
    }
    public boolean isConnected(integer a, integer b) {
        for (list < integer > listConnectedNodes: listNodes) {
            if (listConnectedNodes.contains(a) && listConnectedNodes.contains(b)) {
                return true;
            }
        }
        return false;
    }

}